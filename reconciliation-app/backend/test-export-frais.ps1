# Script de test pour l'export des frais de transaction
# Test de l'endpoint d'export

Write-Host "üß™ Test de l'export des frais de transaction" -ForegroundColor Cyan
Write-Host "=============================================" -ForegroundColor Cyan

$baseUrl = "http://localhost:8080/api"

# Test 1: R√©cup√©rer tous les frais de transaction
Write-Host "`nüìã Test 1: R√©cup√©ration de tous les frais de transaction" -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "$baseUrl/frais-transaction" -Method GET
    Write-Host "‚úÖ Succ√®s: $($response.Count) frais r√©cup√©r√©s" -ForegroundColor Green
    
    if ($response.Count -gt 0) {
        Write-Host "   Premier frais: Service=$($response[0].service), Agence=$($response[0].agence)" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 2: Test de l'endpoint d'export
Write-Host "`nüì§ Test 2: Test de l'endpoint d'export" -ForegroundColor Yellow
try {
    $exportResponse = Invoke-RestMethod -Uri "$baseUrl/frais-transaction/export" -Method GET
    Write-Host "‚úÖ Succ√®s: Export r√©ussi" -ForegroundColor Green
    Write-Host "   Total export√©: $($exportResponse.totalCount) frais" -ForegroundColor Gray
    Write-Host "   Date d'export: $($exportResponse.exportDate)" -ForegroundColor Gray
    
    if ($exportResponse.data.Count -gt 0) {
        Write-Host "   Exemple de donn√©es export√©es:" -ForegroundColor Gray
        $firstRow = $exportResponse.data[0]
        Write-Host "     ID: $($firstRow.ID)" -ForegroundColor Gray
        Write-Host "     Service: $($firstRow.Service)" -ForegroundColor Gray
        Write-Host "     Agence: $($firstRow.Agence)" -ForegroundColor Gray
        Write-Host "     Type: $($firstRow.'Type de Calcul')" -ForegroundColor Gray
        Write-Host "     Valeur: $($firstRow.'Valeur Param√©tr√©e')" -ForegroundColor Gray
    }
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 3: Test des frais actifs
Write-Host "`n‚úÖ Test 3: R√©cup√©ration des frais actifs" -ForegroundColor Yellow
try {
    $actifsResponse = Invoke-RestMethod -Uri "$baseUrl/frais-transaction/actifs" -Method GET
    Write-Host "‚úÖ Succ√®s: $($actifsResponse.Count) frais actifs r√©cup√©r√©s" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 4: Test des services disponibles
Write-Host "`nüîß Test 4: R√©cup√©ration des services disponibles" -ForegroundColor Yellow
try {
    $servicesResponse = Invoke-RestMethod -Uri "$baseUrl/frais-transaction/services" -Method GET
    Write-Host "‚úÖ Succ√®s: $($servicesResponse.Count) services r√©cup√©r√©s" -ForegroundColor Green
    Write-Host "   Services: $($servicesResponse -join ', ')" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

# Test 5: Test des agences disponibles
Write-Host "`nüè¢ Test 5: R√©cup√©ration des agences disponibles" -ForegroundColor Yellow
try {
    $agencesResponse = Invoke-RestMethod -Uri "$baseUrl/frais-transaction/agences" -Method GET
    Write-Host "‚úÖ Succ√®s: $($agencesResponse.Count) agences r√©cup√©r√©es" -ForegroundColor Green
    Write-Host "   Agences: $($agencesResponse -join ', ')" -ForegroundColor Gray
} catch {
    Write-Host "‚ùå Erreur: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüéâ Tests termin√©s!" -ForegroundColor Green
Write-Host "=============================================" -ForegroundColor Cyan 