name: Security Analysis

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Exécuter tous les lundis à 9h00 UTC
    - cron: '0 9 * * 1'

jobs:
  # Analyse des dépendances
  dependency-check:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    - name: Run npm audit
      working-directory: ./reconciliation-app/frontend
      run: npm audit --audit-level=moderate

    - name: Run Maven dependency check
      working-directory: ./reconciliation-app/backend
      run: |
        mvn dependency:check
        mvn org.owasp:dependency-check-maven:check

  # Analyse statique du code
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: ['java', 'javascript']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

  # Tests de sécurité des conteneurs
  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: false  # Désactivé pour l'instant, à activer si tu utilises Docker

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  # Audit de configuration
  config-audit:
    name: Configuration Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check for secrets in code
      run: |
        echo "Checking for potential secrets..."
        # Vérifier les mots de passe en dur
        if grep -r "password.*=" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "⚠️  Warning: Potential hardcoded passwords found"
        fi
        
        # Vérifier les clés API
        if grep -r "api_key\|apikey\|secret" . --exclude-dir=node_modules --exclude-dir=.git; then
          echo "⚠️  Warning: Potential API keys or secrets found"
        fi

    - name: Check file permissions
      run: |
        echo "Checking file permissions..."
        find . -type f -name "*.sh" -exec ls -la {} \;

  # Rapport de sécurité
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [dependency-check, codeql-analysis, config-audit]
    if: always()

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Generate Security Summary
      run: |
        echo "🔒 Security Analysis Summary" >> security-report.md
        echo "=============================" >> security-report.md
        echo "" >> security-report.md
        echo "**Date:** $(date)" >> security-report.md
        echo "**Branch:** ${{ github.ref }}" >> security-report.md
        echo "**Commit:** ${{ github.sha }}" >> security-report.md
        echo "" >> security-report.md
        
        echo "## Dependency Check" >> security-report.md
        if [ "${{ needs.dependency-check.result }}" == "success" ]; then
          echo "✅ Passed" >> security-report.md
        else
          echo "❌ Failed" >> security-report.md
        fi
        echo "" >> security-report.md
        
        echo "## CodeQL Analysis" >> security-report.md
        if [ "${{ needs.codeql-analysis.result }}" == "success" ]; then
          echo "✅ Passed" >> security-report.md
        else
          echo "❌ Failed" >> security-report.md
        fi
        echo "" >> security-report.md
        
        echo "## Configuration Audit" >> security-report.md
        if [ "${{ needs.config-audit.result }}" == "success" ]; then
          echo "✅ Passed" >> security-report.md
        else
          echo "❌ Failed" >> security-report.md
        fi

    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md 